@model AVSModels.Models.CustomerProductModel


@*<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>

    <style>
        .select2-container .select2-selection--single {
            height: 34px !important;
        }

        .select2-container--default .select2-selection--single {
            border: 1px solid #ccc !important;
            border-radius: 0px !important;
        }

    </style>*@
<div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(a => a.CProductID)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="panel-heading">
                <div class="panel-title" style="color:darkblue!important;">Add Products</div>
            </div>
            <div class="panel-body">
                <div class="row btm">
                    <div class="col-md-12">
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.Label("ProductType", htmlAttributes: new { @class = "control-label labelcss col-md-3" })
                                <div class="col-md-9">
                                    @Html.DropDownListFor(model => model.ProductTypeId, new SelectList(ViewBag.productTypes, "value", "text"), "--Select Product--", new { @class = "form-control ProductTypeId", @onchange = "getmodelsbyProductType()" })
                                    @Html.ValidationMessageFor(model => model.ProductTypeId, "", new {@id= "Error_ProductTypeId", @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.Label("Model", htmlAttributes: new { @class = "control-label labelcss col-md-3" })
                                <div class="col-md-9">
                                    @Html.DropDownListFor(model => model.ModelID, new SelectList(ViewBag.modelTypes, "value", "text"), "--Select model--", new { @class = "form-control", @onchange = "BindProductModelInfo()" })
                                    @Html.ValidationMessageFor(model => model.ModelID, "", new { @id = "Error_ModelID", @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.HSNCode, htmlAttributes: new { @class = "control-label labelcss col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.HSNCode, new { htmlAttributes = new { @id = "HSNCode", @class = "form-control", @onkeypress = "Allowdigits(event, this)", @onfocus = "AmountfocusIdx('NewPayment')", @onblur = "AmountformatIdx('NewPayment')" } })
                                    @Html.ValidationMessageFor(model => model.HSNCode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Capacity, htmlAttributes: new { @class = "control-label labelcss col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Capacity, new { htmlAttributes = new { @id = "Capacity", @class = "form-control", @onchange = "ProductCalculation()", @onkeypress = "Allowdigits(event, this)", @onfocus = "AmountfocusIdx('NewPayment')", @onblur = "AmountformatIdx('NewPayment')" } })
                                    @Html.ValidationMessageFor(model => model.Capacity, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>



                    </div>
                </div>
                <div class="row btm">
                    <div class="col-md-12">
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label labelcss col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control", @onchange = "ProductCalculation()", @readonly = "readonly", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Totaltax, htmlAttributes: new { @class = "control-label labelcss col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Totaltax, new { htmlAttributes = new { @id = "Totaltax", @class = "form-control", @readonly = "readonly", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.Totaltax, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.CGST, htmlAttributes: new { @class = "control-label labelcss col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.CGST, new { htmlAttributes = new { @class = "form-control", @onchange = "ProductCalculation()", @readonly = "readonly", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.CGST, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.SGST, htmlAttributes: new { @class = "control-label labelcss col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.SGST, new { htmlAttributes = new { @class = "form-control", @onchange = "ProductCalculation()", @readonly = "readonly", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.SGST, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>




                    </div>
                </div>
                <div class="row btm">
                    <div class="col-md-12">
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.IGST, htmlAttributes: new { @class = "control-label labelcss col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.IGST, new { htmlAttributes = new { @class = "form-control", @onchange = "ProductCalculation()", @readonly = "readonly", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.IGST, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Qty, htmlAttributes: new { @class = "control-label labelcss col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Qty, new { htmlAttributes = new { @class = "form-control", @onchange = "ProductCalculation()" } })
                                    @Html.ValidationMessageFor(model => model.Qty, "", new { @id = "Error_Qty", @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.SellPrice, htmlAttributes: new { @class = "control-label labelcss col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.SellPrice, new { htmlAttributes = new { @class = "form-control", @onchange = "ProductCalculation()" } })
                                    @Html.ValidationMessageFor(model => model.SellPrice, "", new { @id = "Error_SellPrice", @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.NetTotal, htmlAttributes: new { @class = "control-label labelcss col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.NetTotal, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.NetTotal, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="row btm">
                    <div class="col-md-12">
                        <div class="col-md-3">



                            @Html.HiddenFor(m => m.SerialID)
                            <div class="form-group">
                                @Html.Label("SerialNo", htmlAttributes: new { @class = "control-label labelcss col-md-3" })
                                <div class="col-md-9">
                                    <div id="BindSerialNumber">
                                        @Html.EditorFor(model => model.SerialNumber, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>

                                    @Html.ValidationMessageFor(model => model.SerialNumber, "", new { @id = "Error_SerialNumber", @class = "text-danger" })
                                </div>

                            </div>
                        </div>
                        <div class="col-md-3">
                            @Html.HiddenFor(m => m.SerialID)
                            <div class="form-group">
                                @Html.Label("SerialNo2", htmlAttributes: new { @class = "control-label labelcss col-md-3" })
                                <div class="col-md-9">
                                    <div id="BindACSerialNumber">
                                        @Html.EditorFor(model => model.ACSerialNumber, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.ACSerialNumber, "", new { @id = "Error_ACSerialNumber", @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-md-3">

                            <div class="form-group">
                                @Html.Label("PaymentMode", htmlAttributes: new { @class = "control-label labelcss col-md-4" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.PaymentModeId, new SelectList(ViewBag.PaymentModes, "value", "text"), new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.PaymentModeId, "", new { @id = "Error_PaymentModeId", @class = "text-danger" })
                                </div>
                            </div>
                        </div>


                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.Label("PaymentType", htmlAttributes: new { @class = "control-label labelcss col-md-4" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.PaymentTypeId, new SelectList(ViewBag.PaymentTypes, "value", "text"), new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.PaymentTypeId, "", new { @id = "Error_PaymentTypeId", @class = "text-danger" })
                                </div>
                            </div>
                        </div>



                    </div>
                </div>

                <div class="row btm">
                    <div class="col-md-12">
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Transaction.NewPayment, htmlAttributes: new { @class = "control-label labelcss col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Transaction.NewPayment, new { htmlAttributes = new { @id = "NewPayment", @class = "form-control", @onchange = "ProductCalculation()", @onkeypress = "Allowdigits(event, this)", @onfocus = "AmountfocusIdx('NewPayment')", @onblur = "AmountformatIdx('NewPayment')" } })
                                    @Html.ValidationMessageFor(model => model.Transaction.NewPayment, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label labelcss col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control", @onchange = "ProductCalculation()" } })
                                    @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.Label("Paid", htmlAttributes: new { @class = "control-label labelcss col-md-4" })
                                <div class="col-md-8">
                                    <input type="hidden" value="@Model.PaidAmount" id="orgPaidAmount" />
                                    @Html.EditorFor(model => model.PaidAmount, new { htmlAttributes = new { @id = "PaidAmount", @class = "form-control", @readonly = "readonly", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.PaidAmount, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.Label("Pending", htmlAttributes: new { @class = "control-label labelcss col-md-3" })
                                <div class="col-md-9">
                                    <input type="hidden" value="@Model.RemainingAmount" id="orgRemainingAmount" />
                                    @Html.EditorFor(model => model.RemainingAmount, new { htmlAttributes = new { @id = "RemainingAmount", @class = "form-control", @readonly = "readonly", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.RemainingAmount, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="row btm">
                    <div class="col-md-12">
                        <div class="col-md-9">
                            @*<select class="form-control select2">
                        <option>Select</option>
                        <option>Car</option>
                        <option>Bike</option>
                        <option>Scooter</option>
                        <option>Cycle</option>
                        <option>Horse</option>
                    </select>*@
                        </div>

                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.GrossTotal, htmlAttributes: new { @class = "control-label labelcss col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.GrossTotal, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.GrossTotal, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="row btm">
                    <div class="col-md-12">
                        <div class="form-group">
                            <div class="col-md-10"></div>
                            <div class="col-md-2">
                                @if (Model.CProductID != 0)
                                {
                                    <input type="button" value="Save Changes" onclick="SaveCustomerProduct()" class="btn btn-success pull-right" />
                                }
                                else if (Model.CustomerID != 0)
                                {
                                    <input type="button" value="Create" onclick="SaveCustomerProduct()" class="btn btn-primary pull-right" />
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<hr style="border-top:solid;color:darkblue!important;" />

<script>
    $(document).ready(function () {
        var ModelID = $('#ModelID').val();
        if (ModelID == 0) {
            getmodelsbyProductType();
            BindProductModelInfo();
        }
        //$('.select2').select2();
    });
</script>